{"version":3,"file":"1474.b62e80c5.js","mappings":"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","sources":["webpack://symfony/./node_modules/sortablejs/modular/sortable.esm.js"],"sourcesContent":["/**!\n * Sortable 1.14.0\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.14.0\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\n\n\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, _excluded);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    var threshold = sortable[expando].options.emptyInsertThreshold;\n    if (!threshold || lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    } // Safari ignores further event handling after mousedown\n\n\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // if there is a last element, it is the target\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n\n        target = firstChild;\n        targetRect = getRect(target);\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var spacer = 10;\n  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        folding = false; // Do not \"unfold\" after around dragEl if reverted\n\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\n       * Selects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be selected\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\n       * Deselects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be deselected\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\n * Insert multi-drag clones\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\n * @param  {HTMLElement} rootEl\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","value","configurable","writable","_extends","assign","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","document","nodeType","parentNode","closest","ctx","includeCTX","_throttleTimeout","R_SPACE","toggleClass","name","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","list","getElementsByTagName","n","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","d","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","getChild","childNum","options","includeDragEl","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","isRectEqual","rect1","rect2","Math","round","throttle","callback","ms","args","_this","setTimeout","scrollBy","x","y","Polymer","$","Zepto","dom","cloneNode","expando","Date","getTime","AnimationStateManager","animationCallbackId","animationStates","captureAnimationState","animation","slice","child","rect","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","arr","Number","indexOfObject","animateAll","clearTimeout","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","sqrt","pow","calculateRealTime","animate","max","animationResetTimer","currentRect","duration","translateX","translateY","animatingX","animatingY","forRepaintDummy","offsetWidth","repaint","easing","animated","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","p","pluginName","concat","pluginEvent","eventName","sortable","evt","eventCanceled","cancel","eventNameGlobal","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","dispatchEvent","_ref","rootEl","targetEl","cloneEl","toEl","fromEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","originalEvent","putSortable","extraEventProperties","onName","charAt","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","to","from","item","pullMode","lastPutMode","undefined","allEventProperties","_excluded","data","bind","dragEl","parentEl","ghostEl","nextEl","lastDownEl","cloneHidden","dragStarted","moved","activeSortable","active","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","activeGroup","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","touchingSideChild2","clear","_prepareGroup","toFn","pull","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","clientX","clientY","some","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","ret","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","_onMove","dragRect","targetRect","willInsertAfter","retVal","onMoveFn","onMove","draggedRect","related","relatedRect","_disableDraggable","_unsilent","_generateId","str","src","href","sum","charCodeAt","_nextTick","_cancelNextTick","id","contains","_getDirection","type","touch","pointerType","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","_saveInputCheckedState","button","isContentEditable","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","ghostMatrix","relativeScrollOffset","dx","dy","b","c","cssMatrix","appendChild","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","vertical","isOwner","canSort","fromSortable","completedFired","dragOverEvent","_ignoreWhileAnimating","completed","elLastChild","spacer","_ghostIsLast","changed","_ghostIsFirst","firstChild","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","_dragElInRowColumn","side1","scrolledPastTop","scrollBefore","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","_getSwapDirection","dragIndex","nextElementSibling","after","moveVector","extra","axis","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","removeChild","save","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","useAnimation","items","set","destroy","Array","querySelectorAll","removeAttribute","utils","is","extend","dst","nextTick","cancelNextTick","detectDirection","element","_len","_key","create","version","scrollEl","scrollRootEl","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","autoScrolls","scrolling","clearAutoScrolls","autoScroll","pid","clearPointerElemChangedInterval","isFallback","scroll","scrollCustomFn","sens","scrollSensitivity","speed","scrollSpeed","scrollThisInstance","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","bubbleScroll","drop","toSortable","changedTouches","onSpill","Revert","Remove","startIndex","dragStart","_ref2","_ref3","_ref4","parentSortable","AutoScroll","forceAutoScrollFallback","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","dragOverBubble","nulling","ogElemScroller","newElem"],"sourceRoot":""}