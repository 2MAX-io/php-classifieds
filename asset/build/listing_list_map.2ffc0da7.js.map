{"version":3,"sources":["webpack://symfony/./assets/module/leaflet/leaflet_marker_icon.js","webpack://symfony/./assets/module/leaflet/map.js","webpack://symfony/./node_modules/prunecluster/dist/PruneCluster.js","webpack://symfony/./assets/public/listing_list/listing_list_map.js","webpack://symfony/./node_modules/core-js/internals/an-instance.js","webpack://symfony/./node_modules/core-js/internals/get-iterator-method.js","webpack://symfony/./node_modules/core-js/internals/is-array-iterator-method.js","webpack://symfony/./node_modules/core-js/internals/iterator-close.js","webpack://symfony/./node_modules/core-js/internals/redefine-all.js","webpack://symfony/./node_modules/core-js/modules/es.array.concat.js"],"names":["markerIcon","L","iconUrl","mapMarkerIcon","iconSize","iconAnchor","popupAnchor","shadowSize","shadowAnchor","Map","this","mapCenterLatLng","getDefaultMapCenterLatLng","mapZoom","dataForJs","ParamEnum","mapElement","leafletMap","map","tap","zoomControl","attributionControl","setView","control","zoom","zoomInTitle","Translator","zoomOutTitle","addTo","locate","position","drawMarker","drawCircle","returnToPrevBounds","locateOptions","maxZoom","icon","iconLoading","strings","title","metersUnit","feetUnit","popup","outsideMapBoundsMsg","onLocationError","alert","addControl","Control","Fullscreen","false","true","attribution","prefix","tileLayer","latLng","marker","haveLocationCoordinates","LatLng","latitude","longitude","extendStatics","PruneCluster","__extends","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","PruneCluster_1","Point","ClusterObject","hashCodeCounter","maxHashCodeValue","Math","pow","Marker","_super","lat","lng","data","category","weight","filtered","_this","call","hashCode","Move","SetData","key","Cluster","stats","ENABLE_MARKERS_LIST","_clusterMarkers","lastMarker","population","undefined","totalWeight","averagePosition","AddMarker","push","h","currentTotalWeight","newWeight","Reset","ComputeBounds","cluster","proj","Project","size","Size","startX","floor","x","startY","y","a","UnProject","bounds","minLat","maxLat","minLng","maxLng","GetClusterMarkers","ApplyCluster","newCluster","min","max","concat","insertionSort","list","j","tmp","tmpLng","i","length","_markers","_nbChanges","_clusters","ViewPadding","RegisterMarker","_removeFlag","RegisterMarkers","markers","forEach","_sortMarkers","total","nbChanges","sort","_sortClusters","_indexLowerBoundLng","it","step","first","count","_resetClusterViews","l","ProcessView","heightBuffer","abs","widthBuffer","extendedBounds","firstIndex","clusters","workingClusterList","slice","markerPosition","clusterFound","ll","splice","newClustersList","RemoveMarkers","newMarkersList","FindMarkersInArea","area","aMinLat","aMaxLat","aMinLng","aMaxLng","result","pos","withFiltered","rMinLat","Number","MAX_VALUE","rMaxLat","rMinLng","rMaxLng","FindMarkersBoundsInArea","ComputeGlobalBounds","GetMarkers","GetPopulation","ResetClusters","PruneClusterForLeaflet","Layer","Class","extend","initialize","clusterMargin","_map","project","getZoom","unproject","_objectsOnMap","spiderfier","PruneClusterLeafletSpiderfier","_hardMove","_resetIcons","_removeTimeoutId","_markersRemoveListTimeout","BuildLeafletCluster","m","BuildLeafletClusterIcon","_leafletClusterBounds","on","cbounds","markersArea","LatLngBounds","zoomLevelBefore","zoomLevelAfter","getBoundsZoom","filteredBounds","o","_leafletMarker","newMarkersArea","markerPos","isFiltered","currentFilteredBounds","getMaxZoom","fire","center","getLatLng","fitBounds","c","maxPopulation","DivIcon","html","className","point","BuildLeafletMarker","PrepareLeafletMarker","setIcon","content","getPopup","setPopupContent","popupOptions","bindPopup","onAdd","_moveStart","_moveEnd","_zoomStart","_zoomEnd","addLayer","onRemove","off","removeLayer","_moveInProgress","e","hard","_zoomInProgress","getBounds","marginRatio","resetIcons","southWest","getSouthWest","northEast","getNorthEast","objectsOnMap","newObjectsOnMap","markersOnMap","_removeFromMap","clusterCreationList","clusterCreationListPopOne","opacityUpdateList","workingList","icluster","iclusterData","latMargin","lngMargin","oldMaxLng","oldMinLat","oldMaxLat","newMinLng","newMinLat","newMaxLat","_leafletCollision","_leafletOldPopulation","_leafletOldHashCode","oldMarker","_hashCode","_zoomLevel","forceIconRedraw","setLatLng","_leafletPosition","equals","boundsCopy","Util","_population","idata","remove","pa","jcluster","jdata","pb","oldMinLng","newMaxLng","poisson","console","error","creationMarker","iposition","setOpacity","window","setTimeout","_icon","DomUtil","addClass","_shadow","clearTimeout","toRemove","FitBounds","RedrawIcons","processView","_2PI","PI","_circleFootSeparation","_circleStartAngle","_spiralFootSeparation","_spiralLengthStart","_spiralLengthFactor","_spiralCountTrigger","spiderfyDistanceMultiplier","_cluster","_currentMarkers","_multiLines","multiPolyline","_lines","color","polyline","Spiderfy","Unspiderfy","filter","_currentCenter","points","centerPoint","latLngToLayerPoint","_generatePointsSpiral","_generatePointsCircle","polylines","leafletMarkers","projectedPoints","layerPointToLatLng","setZIndexOffset","startTime","Date","anim","setInterval","clearInterval","stepRatio","diffLat","diffLng","setLatLngs","_clusterMarker","centerPt","angle","legLength","angleStep","res","round","cos","sin","separation","lengthFactor","document","querySelector","createLeafletMap","url","URL","location","getCenter","searchParams","set","history","pushState","toString","querySelectorAll","linkElement","linkUrl","getAttribute","setAttribute","value","pruneCluster","leafletMarker","listingOnMap","Routing","id","listingId","slug","listingSlug","imageUrl","mainImage","image","popupContent","listingTitle","autoPan","module","exports","Constructor","name","TypeError","classof","Iterators","ITERATOR","wellKnownSymbol","ArrayPrototype","anObject","iterator","returnMethod","redefine","target","src","options","$","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","proto","forced","arg","k","len","E","A","n","arguments"],"mappings":"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","file":"listing_list_map.2ffc0da7.js","sourcesContent":["\"use strict\";\n\nimport L from \"leaflet\";\nimport mapMarkerIcon from \"~/img/map/map-marker-icon.svg\";\n\nlet markerIcon = L.icon({\n    iconUrl: mapMarkerIcon,\n    iconSize: [22, 22],\n    iconAnchor: [11, 11],\n    popupAnchor: [0, -4],\n    shadowSize: false,\n    shadowAnchor: false,\n});\n\nexport default markerIcon;\n","\"use strict\";\n\nimport \"~/module/leaflet/leaflet\";\nimport dataForJs from \"~/function/dataForJs\";\nimport ParamEnum from \"~/enum/ParamEnum\";\nimport Translator from \"~/module/Translator\";\nimport markerIcon from \"~/module/leaflet/leaflet_marker_icon\";\n\nexport default class Map {\n    mapElement;\n    leafletMap;\n    mapCenterLatLng;\n    mapZoom;\n\n    constructor() {\n        this.mapCenterLatLng = this.getDefaultMapCenterLatLng();\n        this.mapZoom = dataForJs[ParamEnum.MAP_DEFAULT_ZOOM];\n    }\n\n    createLeafletMap(mapElement) {\n        this.mapElement = mapElement;\n        this.leafletMap = L.map(this.mapElement, {\n            tap: false, // ref https://github.com/Leaflet/Leaflet/issues/7255\n            zoomControl: false,\n            attributionControl: false,\n        });\n        this.leafletMap.setView(this.mapCenterLatLng, this.mapZoom);\n\n        L.control\n            .zoom({\n                zoomInTitle: Translator.trans(\"trans.Zoom in\"),\n                zoomOutTitle: Translator.trans(\"trans.Zoom out\"),\n            })\n            .addTo(this.leafletMap);\n\n        // noinspection JSUnusedGlobalSymbols\n        L.control\n            .locate({\n                position: \"topright\",\n                drawMarker: false,\n                drawCircle: false,\n                returnToPrevBounds: true,\n                locateOptions: {\n                    maxZoom: 15,\n                },\n                icon: \"svg svg-location\",\n                iconLoading: \"svg svg-spinner svg-pulse\",\n                strings: {\n                    title: Translator.trans(\"trans.Show me where I am\"),\n                    metersUnit: Translator.trans(\"trans.meters\"),\n                    feetUnit: Translator.trans(\"trans.feet\"),\n                    popup: Translator.trans(\"trans.You are within {distance} {unit} from this point\"),\n                    outsideMapBoundsMsg: Translator.trans(\"trans.You seem located outside the boundaries of the map\"),\n                },\n                onLocationError: () => {\n                    alert(Translator.trans(\"trans.Your web browser denied access to geolocation\"));\n                },\n            })\n            .addTo(this.leafletMap);\n\n        this.leafletMap.addControl(\n            new L.Control.Fullscreen({\n                title: {\n                    false: Translator.trans(\"trans.View Fullscreen\"),\n                    true: Translator.trans(\"trans.Exit Fullscreen\"),\n                },\n            })\n        );\n\n        L.control.attribution({ prefix: false }).addTo(this.leafletMap);\n\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n        }).addTo(this.leafletMap);\n\n        // L.tileLayer(Routing.generate(\"app_map_image_cache\", {\n        //     z: 1,\n        //     x: 2,\n        //     y: 3,\n        // }).replace('1_2_3.png', '{z}_{x}_{y}.png'), {\n        //     attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n        // }).addTo(this.leafletMap);\n\n        return this.leafletMap;\n    }\n\n    addMarker(latLng) {\n        let marker = new L.marker(latLng, { icon: markerIcon });\n        marker.addTo(this.leafletMap);\n\n        return marker;\n    }\n\n    getDefaultMapCenterLatLng() {\n        if (!this.haveLocationCoordinates()) {\n            return new L.LatLng(dataForJs[ParamEnum.MAP_DEFAULT_LATITUDE], dataForJs[ParamEnum.MAP_DEFAULT_LONGITUDE]);\n        }\n\n        let latitude = dataForJs[ParamEnum.MAP_LOCATION_COORDINATES][ParamEnum.LATITUDE];\n        let longitude = dataForJs[ParamEnum.MAP_LOCATION_COORDINATES][ParamEnum.LONGITUDE];\n\n        return new L.LatLng(latitude, longitude);\n    }\n\n    haveLocationCoordinates() {\n        return (\n            dataForJs[ParamEnum.MAP_LOCATION_COORDINATES] &&\n            dataForJs[ParamEnum.MAP_LOCATION_COORDINATES][ParamEnum.LONGITUDE] !== null &&\n            dataForJs[ParamEnum.MAP_LOCATION_COORDINATES][ParamEnum.LATITUDE] !== null\n        );\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar PruneCluster;\r\n(function (PruneCluster_1) {\r\n    var Point = (function () {\r\n        function Point() {\r\n        }\r\n        return Point;\r\n    }());\r\n    PruneCluster_1.Point = Point;\r\n    var ClusterObject = (function () {\r\n        function ClusterObject() {\r\n        }\r\n        return ClusterObject;\r\n    }());\r\n    PruneCluster_1.ClusterObject = ClusterObject;\r\n    var hashCodeCounter = 1;\r\n    var maxHashCodeValue = Math.pow(2, 53) - 1;\r\n    var Marker = (function (_super) {\r\n        __extends(Marker, _super);\r\n        function Marker(lat, lng, data, category, weight, filtered) {\r\n            if (data === void 0) { data = {}; }\r\n            if (weight === void 0) { weight = 1; }\r\n            if (filtered === void 0) { filtered = false; }\r\n            var _this = _super.call(this) || this;\r\n            _this.data = data;\r\n            _this.position = { lat: +lat, lng: +lng };\r\n            _this.weight = weight;\r\n            _this.category = category;\r\n            _this.filtered = filtered;\r\n            _this.hashCode = hashCodeCounter++;\r\n            return _this;\r\n        }\r\n        Marker.prototype.Move = function (lat, lng) {\r\n            this.position.lat = +lat;\r\n            this.position.lng = +lng;\r\n        };\r\n        Marker.prototype.SetData = function (data) {\r\n            for (var key in data) {\r\n                this.data[key] = data[key];\r\n            }\r\n        };\r\n        return Marker;\r\n    }(ClusterObject));\r\n    PruneCluster_1.Marker = Marker;\r\n    var Cluster = (function (_super) {\r\n        __extends(Cluster, _super);\r\n        function Cluster(marker) {\r\n            var _this = _super.call(this) || this;\r\n            _this.stats = [0, 0, 0, 0, 0, 0, 0, 0];\r\n            _this.data = {};\r\n            if (!marker) {\r\n                _this.hashCode = 1;\r\n                if (Cluster.ENABLE_MARKERS_LIST) {\r\n                    _this._clusterMarkers = [];\r\n                }\r\n                return _this;\r\n            }\r\n            if (Cluster.ENABLE_MARKERS_LIST) {\r\n                _this._clusterMarkers = [marker];\r\n            }\r\n            _this.lastMarker = marker;\r\n            _this.hashCode = 31 + marker.hashCode;\r\n            _this.population = 1;\r\n            if (marker.category !== undefined) {\r\n                _this.stats[marker.category] = 1;\r\n            }\r\n            _this.totalWeight = marker.weight;\r\n            _this.position = {\r\n                lat: marker.position.lat,\r\n                lng: marker.position.lng\r\n            };\r\n            _this.averagePosition = {\r\n                lat: marker.position.lat,\r\n                lng: marker.position.lng\r\n            };\r\n            return _this;\r\n        }\r\n        Cluster.prototype.AddMarker = function (marker) {\r\n            if (Cluster.ENABLE_MARKERS_LIST) {\r\n                this._clusterMarkers.push(marker);\r\n            }\r\n            var h = this.hashCode;\r\n            h = ((h << 5) - h) + marker.hashCode;\r\n            if (h >= maxHashCodeValue) {\r\n                this.hashCode = h % maxHashCodeValue;\r\n            }\r\n            else {\r\n                this.hashCode = h;\r\n            }\r\n            this.lastMarker = marker;\r\n            var weight = marker.weight, currentTotalWeight = this.totalWeight, newWeight = weight + currentTotalWeight;\r\n            this.averagePosition.lat =\r\n                (this.averagePosition.lat * currentTotalWeight +\r\n                    marker.position.lat * weight) / newWeight;\r\n            this.averagePosition.lng =\r\n                (this.averagePosition.lng * currentTotalWeight +\r\n                    marker.position.lng * weight) / newWeight;\r\n            ++this.population;\r\n            this.totalWeight = newWeight;\r\n            if (marker.category !== undefined) {\r\n                this.stats[marker.category] = (this.stats[marker.category] + 1) || 1;\r\n            }\r\n        };\r\n        Cluster.prototype.Reset = function () {\r\n            this.hashCode = 1;\r\n            this.lastMarker = undefined;\r\n            this.population = 0;\r\n            this.totalWeight = 0;\r\n            this.stats = [0, 0, 0, 0, 0, 0, 0, 0];\r\n            if (Cluster.ENABLE_MARKERS_LIST) {\r\n                this._clusterMarkers = [];\r\n            }\r\n        };\r\n        Cluster.prototype.ComputeBounds = function (cluster) {\r\n            var proj = cluster.Project(this.position.lat, this.position.lng);\r\n            var size = cluster.Size;\r\n            var nbX = Math.floor(proj.x / size), nbY = Math.floor(proj.y / size), startX = nbX * size, startY = nbY * size;\r\n            var a = cluster.UnProject(startX, startY), b = cluster.UnProject(startX + size, startY + size);\r\n            this.bounds = {\r\n                minLat: b.lat,\r\n                maxLat: a.lat,\r\n                minLng: a.lng,\r\n                maxLng: b.lng\r\n            };\r\n        };\r\n        Cluster.prototype.GetClusterMarkers = function () {\r\n            return this._clusterMarkers;\r\n        };\r\n        Cluster.prototype.ApplyCluster = function (newCluster) {\r\n            this.hashCode = this.hashCode * 41 + newCluster.hashCode * 43;\r\n            if (this.hashCode > maxHashCodeValue) {\r\n                this.hashCode = this.hashCode = maxHashCodeValue;\r\n            }\r\n            var weight = newCluster.totalWeight, currentTotalWeight = this.totalWeight, newWeight = weight + currentTotalWeight;\r\n            this.averagePosition.lat =\r\n                (this.averagePosition.lat * currentTotalWeight +\r\n                    newCluster.averagePosition.lat * weight) / newWeight;\r\n            this.averagePosition.lng =\r\n                (this.averagePosition.lng * currentTotalWeight +\r\n                    newCluster.averagePosition.lng * weight) / newWeight;\r\n            this.population += newCluster.population;\r\n            this.totalWeight = newWeight;\r\n            this.bounds.minLat = Math.min(this.bounds.minLat, newCluster.bounds.minLat);\r\n            this.bounds.minLng = Math.min(this.bounds.minLng, newCluster.bounds.minLng);\r\n            this.bounds.maxLat = Math.max(this.bounds.maxLat, newCluster.bounds.maxLat);\r\n            this.bounds.maxLng = Math.max(this.bounds.maxLng, newCluster.bounds.maxLng);\r\n            for (var category in newCluster.stats) {\r\n                if (newCluster.stats.hasOwnProperty(category)) {\r\n                    if (this.stats.hasOwnProperty(category)) {\r\n                        this.stats[category] += newCluster.stats[category];\r\n                    }\r\n                    else {\r\n                        this.stats[category] = newCluster.stats[category];\r\n                    }\r\n                }\r\n            }\r\n            if (Cluster.ENABLE_MARKERS_LIST) {\r\n                this._clusterMarkers = this._clusterMarkers.concat(newCluster.GetClusterMarkers());\r\n            }\r\n        };\r\n        Cluster.ENABLE_MARKERS_LIST = false;\r\n        return Cluster;\r\n    }(ClusterObject));\r\n    PruneCluster_1.Cluster = Cluster;\r\n    function checkPositionInsideBounds(a, b) {\r\n        return (a.lat >= b.minLat && a.lat <= b.maxLat) &&\r\n            a.lng >= b.minLng && a.lng <= b.maxLng;\r\n    }\r\n    function insertionSort(list) {\r\n        for (var i = 1, j, tmp, tmpLng, length = list.length; i < length; ++i) {\r\n            tmp = list[i];\r\n            tmpLng = tmp.position.lng;\r\n            for (j = i - 1; j >= 0 && list[j].position.lng > tmpLng; --j) {\r\n                list[j + 1] = list[j];\r\n            }\r\n            list[j + 1] = tmp;\r\n        }\r\n    }\r\n    function shouldUseInsertionSort(total, nbChanges) {\r\n        if (nbChanges > 300) {\r\n            return false;\r\n        }\r\n        else {\r\n            return (nbChanges / total) < 0.2;\r\n        }\r\n    }\r\n    var PruneCluster = (function () {\r\n        function PruneCluster() {\r\n            this._markers = [];\r\n            this._nbChanges = 0;\r\n            this._clusters = [];\r\n            this.Size = 166;\r\n            this.ViewPadding = 0.2;\r\n        }\r\n        PruneCluster.prototype.RegisterMarker = function (marker) {\r\n            if (marker._removeFlag) {\r\n                delete marker._removeFlag;\r\n            }\r\n            this._markers.push(marker);\r\n            this._nbChanges += 1;\r\n        };\r\n        PruneCluster.prototype.RegisterMarkers = function (markers) {\r\n            var _this = this;\r\n            markers.forEach(function (marker) {\r\n                _this.RegisterMarker(marker);\r\n            });\r\n        };\r\n        PruneCluster.prototype._sortMarkers = function () {\r\n            var markers = this._markers, length = markers.length;\r\n            if (this._nbChanges && !shouldUseInsertionSort(length, this._nbChanges)) {\r\n                this._markers.sort(function (a, b) { return a.position.lng - b.position.lng; });\r\n            }\r\n            else {\r\n                insertionSort(markers);\r\n            }\r\n            this._nbChanges = 0;\r\n        };\r\n        PruneCluster.prototype._sortClusters = function () {\r\n            insertionSort(this._clusters);\r\n        };\r\n        PruneCluster.prototype._indexLowerBoundLng = function (lng) {\r\n            var markers = this._markers, it, step, first = 0, count = markers.length;\r\n            while (count > 0) {\r\n                step = Math.floor(count / 2);\r\n                it = first + step;\r\n                if (markers[it].position.lng < lng) {\r\n                    first = ++it;\r\n                    count -= step + 1;\r\n                }\r\n                else {\r\n                    count = step;\r\n                }\r\n            }\r\n            return first;\r\n        };\r\n        PruneCluster.prototype._resetClusterViews = function () {\r\n            for (var i = 0, l = this._clusters.length; i < l; ++i) {\r\n                var cluster = this._clusters[i];\r\n                cluster.Reset();\r\n                cluster.ComputeBounds(this);\r\n            }\r\n        };\r\n        PruneCluster.prototype.ProcessView = function (bounds) {\r\n            var heightBuffer = Math.abs(bounds.maxLat - bounds.minLat) * this.ViewPadding, widthBuffer = Math.abs(bounds.maxLng - bounds.minLng) * this.ViewPadding;\r\n            var extendedBounds = {\r\n                minLat: bounds.minLat - heightBuffer - heightBuffer,\r\n                maxLat: bounds.maxLat + heightBuffer + heightBuffer,\r\n                minLng: bounds.minLng - widthBuffer - widthBuffer,\r\n                maxLng: bounds.maxLng + widthBuffer + widthBuffer\r\n            };\r\n            this._sortMarkers();\r\n            this._resetClusterViews();\r\n            var firstIndex = this._indexLowerBoundLng(extendedBounds.minLng);\r\n            var markers = this._markers, clusters = this._clusters;\r\n            var workingClusterList = clusters.slice(0);\r\n            for (var i = firstIndex, l = markers.length; i < l; ++i) {\r\n                var marker = markers[i], markerPosition = marker.position;\r\n                if (markerPosition.lng > extendedBounds.maxLng) {\r\n                    break;\r\n                }\r\n                if (markerPosition.lat > extendedBounds.minLat &&\r\n                    markerPosition.lat < extendedBounds.maxLat &&\r\n                    !marker.filtered) {\r\n                    var clusterFound = false, cluster;\r\n                    for (var j = 0, ll = workingClusterList.length; j < ll; ++j) {\r\n                        cluster = workingClusterList[j];\r\n                        if (cluster.bounds.maxLng < marker.position.lng) {\r\n                            workingClusterList.splice(j, 1);\r\n                            --j;\r\n                            --ll;\r\n                            continue;\r\n                        }\r\n                        if (checkPositionInsideBounds(markerPosition, cluster.bounds)) {\r\n                            cluster.AddMarker(marker);\r\n                            clusterFound = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!clusterFound) {\r\n                        cluster = new Cluster(marker);\r\n                        cluster.ComputeBounds(this);\r\n                        clusters.push(cluster);\r\n                        workingClusterList.push(cluster);\r\n                    }\r\n                }\r\n            }\r\n            var newClustersList = [];\r\n            for (i = 0, l = clusters.length; i < l; ++i) {\r\n                cluster = clusters[i];\r\n                if (cluster.population > 0) {\r\n                    newClustersList.push(cluster);\r\n                }\r\n            }\r\n            this._clusters = newClustersList;\r\n            this._sortClusters();\r\n            return this._clusters;\r\n        };\r\n        PruneCluster.prototype.RemoveMarkers = function (markers) {\r\n            if (!markers) {\r\n                this._markers = [];\r\n                return;\r\n            }\r\n            for (var i = 0, l = markers.length; i < l; ++i) {\r\n                markers[i]._removeFlag = true;\r\n            }\r\n            var newMarkersList = [];\r\n            for (i = 0, l = this._markers.length; i < l; ++i) {\r\n                if (!this._markers[i]._removeFlag) {\r\n                    newMarkersList.push(this._markers[i]);\r\n                }\r\n                else {\r\n                    delete this._markers[i]._removeFlag;\r\n                }\r\n            }\r\n            this._markers = newMarkersList;\r\n        };\r\n        PruneCluster.prototype.FindMarkersInArea = function (area) {\r\n            var aMinLat = area.minLat, aMaxLat = area.maxLat, aMinLng = area.minLng, aMaxLng = area.maxLng, markers = this._markers, result = [];\r\n            var firstIndex = this._indexLowerBoundLng(aMinLng);\r\n            for (var i = firstIndex, l = markers.length; i < l; ++i) {\r\n                var pos = markers[i].position;\r\n                if (pos.lng > aMaxLng) {\r\n                    break;\r\n                }\r\n                if (pos.lat >= aMinLat && pos.lat <= aMaxLat &&\r\n                    pos.lng >= aMinLng) {\r\n                    result.push(markers[i]);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        PruneCluster.prototype.ComputeBounds = function (markers, withFiltered) {\r\n            if (withFiltered === void 0) { withFiltered = true; }\r\n            if (!markers || !markers.length) {\r\n                return null;\r\n            }\r\n            var rMinLat = Number.MAX_VALUE, rMaxLat = -Number.MAX_VALUE, rMinLng = Number.MAX_VALUE, rMaxLng = -Number.MAX_VALUE;\r\n            for (var i = 0, l = markers.length; i < l; ++i) {\r\n                if (!withFiltered && markers[i].filtered) {\r\n                    continue;\r\n                }\r\n                var pos = markers[i].position;\r\n                if (pos.lat < rMinLat)\r\n                    rMinLat = pos.lat;\r\n                if (pos.lat > rMaxLat)\r\n                    rMaxLat = pos.lat;\r\n                if (pos.lng < rMinLng)\r\n                    rMinLng = pos.lng;\r\n                if (pos.lng > rMaxLng)\r\n                    rMaxLng = pos.lng;\r\n            }\r\n            return {\r\n                minLat: rMinLat,\r\n                maxLat: rMaxLat,\r\n                minLng: rMinLng,\r\n                maxLng: rMaxLng\r\n            };\r\n        };\r\n        PruneCluster.prototype.FindMarkersBoundsInArea = function (area) {\r\n            return this.ComputeBounds(this.FindMarkersInArea(area));\r\n        };\r\n        PruneCluster.prototype.ComputeGlobalBounds = function (withFiltered) {\r\n            if (withFiltered === void 0) { withFiltered = true; }\r\n            return this.ComputeBounds(this._markers, withFiltered);\r\n        };\r\n        PruneCluster.prototype.GetMarkers = function () {\r\n            return this._markers;\r\n        };\r\n        PruneCluster.prototype.GetPopulation = function () {\r\n            return this._markers.length;\r\n        };\r\n        PruneCluster.prototype.ResetClusters = function () {\r\n            this._clusters = [];\r\n        };\r\n        return PruneCluster;\r\n    }());\r\n    PruneCluster_1.PruneCluster = PruneCluster;\r\n})(PruneCluster || (PruneCluster = {}));\r\nvar PruneCluster;\r\n(function (PruneCluster) {\r\n})(PruneCluster || (PruneCluster = {}));\r\nvar PruneClusterForLeaflet = (L.Layer ? L.Layer : L.Class).extend({\r\n    initialize: function (size, clusterMargin) {\r\n        var _this = this;\r\n        if (size === void 0) { size = 120; }\r\n        if (clusterMargin === void 0) { clusterMargin = 20; }\r\n        this.Cluster = new PruneCluster.PruneCluster();\r\n        this.Cluster.Size = size;\r\n        this.clusterMargin = Math.min(clusterMargin, size / 4);\r\n        this.Cluster.Project = function (lat, lng) {\r\n            return _this._map.project(new L.LatLng(lat, lng), Math.floor(_this._map.getZoom()));\r\n        };\r\n        this.Cluster.UnProject = function (x, y) {\r\n            return _this._map.unproject(new L.Point(x, y), Math.floor(_this._map.getZoom()));\r\n        };\r\n        this._objectsOnMap = [];\r\n        this.spiderfier = new PruneClusterLeafletSpiderfier(this);\r\n        this._hardMove = false;\r\n        this._resetIcons = false;\r\n        this._removeTimeoutId = 0;\r\n        this._markersRemoveListTimeout = [];\r\n    },\r\n    RegisterMarker: function (marker) {\r\n        this.Cluster.RegisterMarker(marker);\r\n    },\r\n    RegisterMarkers: function (markers) {\r\n        this.Cluster.RegisterMarkers(markers);\r\n    },\r\n    RemoveMarkers: function (markers) {\r\n        this.Cluster.RemoveMarkers(markers);\r\n    },\r\n    BuildLeafletCluster: function (cluster, position) {\r\n        var _this = this;\r\n        var m = new L.Marker(position, {\r\n            icon: this.BuildLeafletClusterIcon(cluster)\r\n        });\r\n        m._leafletClusterBounds = cluster.bounds;\r\n        m.on('click', function () {\r\n            var cbounds = m._leafletClusterBounds;\r\n            var markersArea = _this.Cluster.FindMarkersInArea(cbounds);\r\n            var b = _this.Cluster.ComputeBounds(markersArea);\r\n            if (b) {\r\n                var bounds = new L.LatLngBounds(new L.LatLng(b.minLat, b.maxLng), new L.LatLng(b.maxLat, b.minLng));\r\n                var zoomLevelBefore = _this._map.getZoom(), zoomLevelAfter = _this._map.getBoundsZoom(bounds, false, new L.Point(20, 20));\r\n                if (zoomLevelAfter === zoomLevelBefore) {\r\n                    var filteredBounds = [];\r\n                    for (var i = 0, l = _this._objectsOnMap.length; i < l; ++i) {\r\n                        var o = _this._objectsOnMap[i];\r\n                        if (o.data._leafletMarker !== m) {\r\n                            if (o.bounds.minLat >= cbounds.minLat &&\r\n                                o.bounds.maxLat <= cbounds.maxLat &&\r\n                                o.bounds.minLng >= cbounds.minLng &&\r\n                                o.bounds.maxLng <= cbounds.maxLng) {\r\n                                filteredBounds.push(o.bounds);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (filteredBounds.length > 0) {\r\n                        var newMarkersArea = [];\r\n                        var ll = filteredBounds.length;\r\n                        for (i = 0, l = markersArea.length; i < l; ++i) {\r\n                            var markerPos = markersArea[i].position;\r\n                            var isFiltered = false;\r\n                            for (var j = 0; j < ll; ++j) {\r\n                                var currentFilteredBounds = filteredBounds[j];\r\n                                if (markerPos.lat >= currentFilteredBounds.minLat &&\r\n                                    markerPos.lat <= currentFilteredBounds.maxLat &&\r\n                                    markerPos.lng >= currentFilteredBounds.minLng &&\r\n                                    markerPos.lng <= currentFilteredBounds.maxLng) {\r\n                                    isFiltered = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isFiltered) {\r\n                                newMarkersArea.push(markersArea[i]);\r\n                            }\r\n                        }\r\n                        markersArea = newMarkersArea;\r\n                    }\r\n                    if (markersArea.length < 200 || zoomLevelAfter >= _this._map.getMaxZoom()) {\r\n                        _this._map.fire('overlappingmarkers', {\r\n                            cluster: _this,\r\n                            markers: markersArea,\r\n                            center: m.getLatLng(),\r\n                            marker: m\r\n                        });\r\n                    }\r\n                    else {\r\n                        zoomLevelAfter++;\r\n                    }\r\n                    _this._map.setView(m.getLatLng(), zoomLevelAfter);\r\n                }\r\n                else {\r\n                    _this._map.fitBounds(bounds);\r\n                }\r\n            }\r\n        });\r\n        return m;\r\n    },\r\n    BuildLeafletClusterIcon: function (cluster) {\r\n        var c = 'prunecluster prunecluster-';\r\n        var iconSize = 38;\r\n        var maxPopulation = this.Cluster.GetPopulation();\r\n        if (cluster.population < Math.max(10, maxPopulation * 0.01)) {\r\n            c += 'small';\r\n        }\r\n        else if (cluster.population < Math.max(100, maxPopulation * 0.05)) {\r\n            c += 'medium';\r\n            iconSize = 40;\r\n        }\r\n        else {\r\n            c += 'large';\r\n            iconSize = 44;\r\n        }\r\n        return new L.DivIcon({\r\n            html: \"<div><span>\" + cluster.population + \"</span></div>\",\r\n            className: c,\r\n            iconSize: L.point(iconSize, iconSize)\r\n        });\r\n    },\r\n    BuildLeafletMarker: function (marker, position) {\r\n        var m = new L.Marker(position);\r\n        this.PrepareLeafletMarker(m, marker.data, marker.category);\r\n        return m;\r\n    },\r\n    PrepareLeafletMarker: function (marker, data, category) {\r\n        if (data.icon) {\r\n            if (typeof data.icon === 'function') {\r\n                marker.setIcon(data.icon(data, category));\r\n            }\r\n            else {\r\n                marker.setIcon(data.icon);\r\n            }\r\n        }\r\n        if (data.popup) {\r\n            var content = typeof data.popup === 'function' ? data.popup(data, category) : data.popup;\r\n            if (marker.getPopup()) {\r\n                marker.setPopupContent(content, data.popupOptions);\r\n            }\r\n            else {\r\n                marker.bindPopup(content, data.popupOptions);\r\n            }\r\n        }\r\n    },\r\n    onAdd: function (map) {\r\n        this._map = map;\r\n        map.on('movestart', this._moveStart, this);\r\n        map.on('moveend', this._moveEnd, this);\r\n        map.on('zoomend', this._zoomStart, this);\r\n        map.on('zoomend', this._zoomEnd, this);\r\n        this.ProcessView();\r\n        map.addLayer(this.spiderfier);\r\n    },\r\n    onRemove: function (map) {\r\n        map.off('movestart', this._moveStart, this);\r\n        map.off('moveend', this._moveEnd, this);\r\n        map.off('zoomend', this._zoomStart, this);\r\n        map.off('zoomend', this._zoomEnd, this);\r\n        for (var i = 0, l = this._objectsOnMap.length; i < l; ++i) {\r\n            map.removeLayer(this._objectsOnMap[i].data._leafletMarker);\r\n        }\r\n        this._objectsOnMap = [];\r\n        this.Cluster.ResetClusters();\r\n        map.removeLayer(this.spiderfier);\r\n        this._map = null;\r\n    },\r\n    _moveStart: function () {\r\n        this._moveInProgress = true;\r\n    },\r\n    _moveEnd: function (e) {\r\n        this._moveInProgress = false;\r\n        this._hardMove = e.hard;\r\n        this.ProcessView();\r\n    },\r\n    _zoomStart: function () {\r\n        this._zoomInProgress = true;\r\n    },\r\n    _zoomEnd: function () {\r\n        this._zoomInProgress = false;\r\n        this.ProcessView();\r\n    },\r\n    ProcessView: function () {\r\n        var _this = this;\r\n        if (!this._map || this._zoomInProgress || this._moveInProgress) {\r\n            return;\r\n        }\r\n        var map = this._map, bounds = map.getBounds(), zoom = Math.floor(map.getZoom()), marginRatio = this.clusterMargin / this.Cluster.Size, resetIcons = this._resetIcons;\r\n        var southWest = bounds.getSouthWest(), northEast = bounds.getNorthEast();\r\n        var clusters = this.Cluster.ProcessView({\r\n            minLat: southWest.lat,\r\n            minLng: southWest.lng,\r\n            maxLat: northEast.lat,\r\n            maxLng: northEast.lng\r\n        });\r\n        var objectsOnMap = this._objectsOnMap, newObjectsOnMap = [], markersOnMap = new Array(objectsOnMap.length);\r\n        for (var i = 0, l = objectsOnMap.length; i < l; ++i) {\r\n            var marker = objectsOnMap[i].data._leafletMarker;\r\n            markersOnMap[i] = marker;\r\n            marker._removeFromMap = true;\r\n        }\r\n        var clusterCreationList = [];\r\n        var clusterCreationListPopOne = [];\r\n        var opacityUpdateList = [];\r\n        var workingList = [];\r\n        for (i = 0, l = clusters.length; i < l; ++i) {\r\n            var icluster = clusters[i], iclusterData = icluster.data;\r\n            var latMargin = (icluster.bounds.maxLat - icluster.bounds.minLat) * marginRatio, lngMargin = (icluster.bounds.maxLng - icluster.bounds.minLng) * marginRatio;\r\n            for (var j = 0, ll = workingList.length; j < ll; ++j) {\r\n                var c = workingList[j];\r\n                if (c.bounds.maxLng < icluster.bounds.minLng) {\r\n                    workingList.splice(j, 1);\r\n                    --j;\r\n                    --ll;\r\n                    continue;\r\n                }\r\n                var oldMaxLng = c.averagePosition.lng + lngMargin, oldMinLat = c.averagePosition.lat - latMargin, oldMaxLat = c.averagePosition.lat + latMargin, newMinLng = icluster.averagePosition.lng - lngMargin, newMinLat = icluster.averagePosition.lat - latMargin, newMaxLat = icluster.averagePosition.lat + latMargin;\r\n                if (oldMaxLng > newMinLng && oldMaxLat > newMinLat && oldMinLat < newMaxLat) {\r\n                    iclusterData._leafletCollision = true;\r\n                    c.ApplyCluster(icluster);\r\n                    break;\r\n                }\r\n            }\r\n            if (!iclusterData._leafletCollision) {\r\n                workingList.push(icluster);\r\n            }\r\n        }\r\n        clusters.forEach(function (cluster) {\r\n            var m = undefined;\r\n            var data = cluster.data;\r\n            if (data._leafletCollision) {\r\n                data._leafletCollision = false;\r\n                data._leafletOldPopulation = 0;\r\n                data._leafletOldHashCode = 0;\r\n                return;\r\n            }\r\n            var position = new L.LatLng(cluster.averagePosition.lat, cluster.averagePosition.lng);\r\n            var oldMarker = data._leafletMarker;\r\n            if (oldMarker) {\r\n                if (cluster.population === 1 && data._leafletOldPopulation === 1 && cluster.hashCode === oldMarker._hashCode) {\r\n                    if (resetIcons || oldMarker._zoomLevel !== zoom || cluster.lastMarker.data.forceIconRedraw) {\r\n                        _this.PrepareLeafletMarker(oldMarker, cluster.lastMarker.data, cluster.lastMarker.category);\r\n                        if (cluster.lastMarker.data.forceIconRedraw) {\r\n                            cluster.lastMarker.data.forceIconRedraw = false;\r\n                        }\r\n                    }\r\n                    oldMarker.setLatLng(position);\r\n                    m = oldMarker;\r\n                }\r\n                else if (cluster.population > 1 && data._leafletOldPopulation > 1 && (oldMarker._zoomLevel === zoom ||\r\n                    data._leafletPosition.equals(position))) {\r\n                    oldMarker.setLatLng(position);\r\n                    if (resetIcons || cluster.population != data._leafletOldPopulation ||\r\n                        cluster.hashCode !== data._leafletOldHashCode) {\r\n                        var boundsCopy = {};\r\n                        L.Util.extend(boundsCopy, cluster.bounds);\r\n                        oldMarker._leafletClusterBounds = boundsCopy;\r\n                        oldMarker.setIcon(_this.BuildLeafletClusterIcon(cluster));\r\n                    }\r\n                    data._leafletOldPopulation = cluster.population;\r\n                    data._leafletOldHashCode = cluster.hashCode;\r\n                    m = oldMarker;\r\n                }\r\n            }\r\n            if (!m) {\r\n                if (cluster.population === 1) {\r\n                    clusterCreationListPopOne.push(cluster);\r\n                }\r\n                else {\r\n                    clusterCreationList.push(cluster);\r\n                }\r\n                data._leafletPosition = position;\r\n                data._leafletOldPopulation = cluster.population;\r\n                data._leafletOldHashCode = cluster.hashCode;\r\n            }\r\n            else {\r\n                m._removeFromMap = false;\r\n                newObjectsOnMap.push(cluster);\r\n                m._zoomLevel = zoom;\r\n                m._hashCode = cluster.hashCode;\r\n                m._population = cluster.population;\r\n                data._leafletMarker = m;\r\n                data._leafletPosition = position;\r\n            }\r\n        });\r\n        clusterCreationList = clusterCreationListPopOne.concat(clusterCreationList);\r\n        for (i = 0, l = objectsOnMap.length; i < l; ++i) {\r\n            icluster = objectsOnMap[i];\r\n            var idata = icluster.data;\r\n            marker = idata._leafletMarker;\r\n            if (idata._leafletMarker._removeFromMap) {\r\n                var remove = true;\r\n                if (marker._zoomLevel === zoom) {\r\n                    var pa = icluster.averagePosition;\r\n                    latMargin = (icluster.bounds.maxLat - icluster.bounds.minLat) * marginRatio,\r\n                        lngMargin = (icluster.bounds.maxLng - icluster.bounds.minLng) * marginRatio;\r\n                    for (j = 0, ll = clusterCreationList.length; j < ll; ++j) {\r\n                        var jcluster = clusterCreationList[j], jdata = jcluster.data;\r\n                        if (marker._population === 1 && jcluster.population === 1 &&\r\n                            marker._hashCode === jcluster.hashCode) {\r\n                            if (resetIcons || jcluster.lastMarker.data.forceIconRedraw) {\r\n                                this.PrepareLeafletMarker(marker, jcluster.lastMarker.data, jcluster.lastMarker.category);\r\n                                if (jcluster.lastMarker.data.forceIconRedraw) {\r\n                                    jcluster.lastMarker.data.forceIconRedraw = false;\r\n                                }\r\n                            }\r\n                            marker.setLatLng(jdata._leafletPosition);\r\n                            remove = false;\r\n                        }\r\n                        else {\r\n                            var pb = jcluster.averagePosition;\r\n                            var oldMinLng = pa.lng - lngMargin, newMaxLng = pb.lng + lngMargin;\r\n                            oldMaxLng = pa.lng + lngMargin;\r\n                            oldMinLat = pa.lat - latMargin;\r\n                            oldMaxLat = pa.lat + latMargin;\r\n                            newMinLng = pb.lng - lngMargin;\r\n                            newMinLat = pb.lat - latMargin;\r\n                            newMaxLat = pb.lat + latMargin;\r\n                            if ((marker._population > 1 && jcluster.population > 1) &&\r\n                                (oldMaxLng > newMinLng && oldMinLng < newMaxLng && oldMaxLat > newMinLat && oldMinLat < newMaxLat)) {\r\n                                marker.setLatLng(jdata._leafletPosition);\r\n                                marker.setIcon(this.BuildLeafletClusterIcon(jcluster));\r\n                                var poisson = {};\r\n                                L.Util.extend(poisson, jcluster.bounds);\r\n                                marker._leafletClusterBounds = poisson;\r\n                                jdata._leafletOldPopulation = jcluster.population;\r\n                                jdata._leafletOldHashCode = jcluster.hashCode;\r\n                                marker._population = jcluster.population;\r\n                                remove = false;\r\n                            }\r\n                        }\r\n                        if (!remove) {\r\n                            jdata._leafletMarker = marker;\r\n                            marker._removeFromMap = false;\r\n                            newObjectsOnMap.push(jcluster);\r\n                            clusterCreationList.splice(j, 1);\r\n                            --j;\r\n                            --ll;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (remove) {\r\n                    if (!marker._removeFromMap)\r\n                        console.error(\"wtf\");\r\n                }\r\n            }\r\n        }\r\n        for (i = 0, l = clusterCreationList.length; i < l; ++i) {\r\n            icluster = clusterCreationList[i],\r\n                idata = icluster.data;\r\n            var iposition = idata._leafletPosition;\r\n            var creationMarker;\r\n            if (icluster.population === 1) {\r\n                creationMarker = this.BuildLeafletMarker(icluster.lastMarker, iposition);\r\n            }\r\n            else {\r\n                creationMarker = this.BuildLeafletCluster(icluster, iposition);\r\n            }\r\n            creationMarker.addTo(map);\r\n            creationMarker.setOpacity(0);\r\n            opacityUpdateList.push(creationMarker);\r\n            idata._leafletMarker = creationMarker;\r\n            creationMarker._zoomLevel = zoom;\r\n            creationMarker._hashCode = icluster.hashCode;\r\n            creationMarker._population = icluster.population;\r\n            newObjectsOnMap.push(icluster);\r\n        }\r\n        window.setTimeout(function () {\r\n            for (i = 0, l = opacityUpdateList.length; i < l; ++i) {\r\n                var m = opacityUpdateList[i];\r\n                if (m._icon)\r\n                    L.DomUtil.addClass(m._icon, \"prunecluster-anim\");\r\n                if (m._shadow)\r\n                    L.DomUtil.addClass(m._shadow, \"prunecluster-anim\");\r\n                m.setOpacity(1);\r\n            }\r\n        }, 1);\r\n        if (this._hardMove) {\r\n            for (i = 0, l = markersOnMap.length; i < l; ++i) {\r\n                marker = markersOnMap[i];\r\n                if (marker._removeFromMap) {\r\n                    map.removeLayer(marker);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this._removeTimeoutId !== 0) {\r\n                window.clearTimeout(this._removeTimeoutId);\r\n                for (i = 0, l = this._markersRemoveListTimeout.length; i < l; ++i) {\r\n                    map.removeLayer(this._markersRemoveListTimeout[i]);\r\n                }\r\n            }\r\n            var toRemove = [];\r\n            for (i = 0, l = markersOnMap.length; i < l; ++i) {\r\n                marker = markersOnMap[i];\r\n                if (marker._removeFromMap) {\r\n                    marker.setOpacity(0);\r\n                    toRemove.push(marker);\r\n                }\r\n            }\r\n            if (toRemove.length > 0) {\r\n                this._removeTimeoutId = window.setTimeout(function () {\r\n                    for (i = 0, l = toRemove.length; i < l; ++i) {\r\n                        map.removeLayer(toRemove[i]);\r\n                    }\r\n                    _this._removeTimeoutId = 0;\r\n                }, 300);\r\n            }\r\n            this._markersRemoveListTimeout = toRemove;\r\n        }\r\n        this._objectsOnMap = newObjectsOnMap;\r\n        this._hardMove = false;\r\n        this._resetIcons = false;\r\n    },\r\n    FitBounds: function (withFiltered) {\r\n        if (withFiltered === void 0) { withFiltered = true; }\r\n        var bounds = this.Cluster.ComputeGlobalBounds(withFiltered);\r\n        if (bounds) {\r\n            this._map.fitBounds(new L.LatLngBounds(new L.LatLng(bounds.minLat, bounds.maxLng), new L.LatLng(bounds.maxLat, bounds.minLng)));\r\n        }\r\n    },\r\n    GetMarkers: function () {\r\n        return this.Cluster.GetMarkers();\r\n    },\r\n    RedrawIcons: function (processView) {\r\n        if (processView === void 0) { processView = true; }\r\n        this._resetIcons = true;\r\n        if (processView) {\r\n            this.ProcessView();\r\n        }\r\n    }\r\n});\r\nvar PruneClusterLeafletSpiderfier = (L.Layer ? L.Layer : L.Class).extend({\r\n    _2PI: Math.PI * 2,\r\n    _circleFootSeparation: 25,\r\n    _circleStartAngle: Math.PI / 6,\r\n    _spiralFootSeparation: 28,\r\n    _spiralLengthStart: 11,\r\n    _spiralLengthFactor: 5,\r\n    _spiralCountTrigger: 8,\r\n    spiderfyDistanceMultiplier: 1,\r\n    initialize: function (cluster) {\r\n        this._cluster = cluster;\r\n        this._currentMarkers = [];\r\n        this._multiLines = !!L.multiPolyline;\r\n        this._lines = this._multiLines ?\r\n            L.multiPolyline([], { weight: 1.5, color: '#222' }) :\r\n            L.polyline([], { weight: 1.5, color: '#222' });\r\n    },\r\n    onAdd: function (map) {\r\n        this._map = map;\r\n        this._map.on('overlappingmarkers', this.Spiderfy, this);\r\n        this._map.on('click', this.Unspiderfy, this);\r\n        this._map.on('zoomend', this.Unspiderfy, this);\r\n    },\r\n    Spiderfy: function (data) {\r\n        var _this = this;\r\n        if (data.cluster !== this._cluster) {\r\n            return;\r\n        }\r\n        this.Unspiderfy();\r\n        var markers = data.markers.filter(function (marker) {\r\n            return !marker.filtered;\r\n        });\r\n        this._currentCenter = data.center;\r\n        var centerPoint = this._map.latLngToLayerPoint(data.center);\r\n        var points;\r\n        if (markers.length >= this._spiralCountTrigger) {\r\n            points = this._generatePointsSpiral(markers.length, centerPoint);\r\n        }\r\n        else {\r\n            if (this._multiLines) {\r\n                centerPoint.y += 10;\r\n            }\r\n            points = this._generatePointsCircle(markers.length, centerPoint);\r\n        }\r\n        var polylines = [];\r\n        var leafletMarkers = [];\r\n        var projectedPoints = [];\r\n        for (var i = 0, l = points.length; i < l; ++i) {\r\n            var pos = this._map.layerPointToLatLng(points[i]);\r\n            var m = this._cluster.BuildLeafletMarker(markers[i], data.center);\r\n            m.setZIndexOffset(5000);\r\n            m.setOpacity(0);\r\n            this._currentMarkers.push(m);\r\n            this._map.addLayer(m);\r\n            leafletMarkers.push(m);\r\n            projectedPoints.push(pos);\r\n        }\r\n        window.setTimeout(function () {\r\n            for (i = 0, l = points.length; i < l; ++i) {\r\n                leafletMarkers[i].setLatLng(projectedPoints[i])\r\n                    .setOpacity(1);\r\n            }\r\n            var startTime = +new Date();\r\n            var interval = 42, duration = 290;\r\n            var anim = window.setInterval(function () {\r\n                polylines = [];\r\n                var now = +new Date();\r\n                var d = now - startTime;\r\n                if (d >= duration) {\r\n                    window.clearInterval(anim);\r\n                    stepRatio = 1.0;\r\n                }\r\n                else {\r\n                    var stepRatio = d / duration;\r\n                }\r\n                var center = data.center;\r\n                for (i = 0, l = points.length; i < l; ++i) {\r\n                    var p = projectedPoints[i], diffLat = p.lat - center.lat, diffLng = p.lng - center.lng;\r\n                    polylines.push([center, new L.LatLng(center.lat + diffLat * stepRatio, center.lng + diffLng * stepRatio)]);\r\n                }\r\n                _this._lines.setLatLngs(polylines);\r\n            }, interval);\r\n        }, 1);\r\n        this._lines.setLatLngs(polylines);\r\n        this._map.addLayer(this._lines);\r\n        if (data.marker) {\r\n            this._clusterMarker = data.marker.setOpacity(0.3);\r\n        }\r\n    },\r\n    _generatePointsCircle: function (count, centerPt) {\r\n        var circumference = this.spiderfyDistanceMultiplier * this._circleFootSeparation * (2 + count), legLength = circumference / this._2PI, angleStep = this._2PI / count, res = [], i, angle;\r\n        res.length = count;\r\n        for (i = count - 1; i >= 0; i--) {\r\n            angle = this._circleStartAngle + i * angleStep;\r\n            res[i] = new L.Point(Math.round(centerPt.x + legLength * Math.cos(angle)), Math.round(centerPt.y + legLength * Math.sin(angle)));\r\n        }\r\n        return res;\r\n    },\r\n    _generatePointsSpiral: function (count, centerPt) {\r\n        var legLength = this.spiderfyDistanceMultiplier * this._spiralLengthStart, separation = this.spiderfyDistanceMultiplier * this._spiralFootSeparation, lengthFactor = this.spiderfyDistanceMultiplier * this._spiralLengthFactor, angle = 0, res = [], i;\r\n        res.length = count;\r\n        for (i = count - 1; i >= 0; i--) {\r\n            angle += separation / legLength + i * 0.0005;\r\n            res[i] = new L.Point(Math.round(centerPt.x + legLength * Math.cos(angle)), Math.round(centerPt.y + legLength * Math.sin(angle)));\r\n            legLength += this._2PI * lengthFactor / angle;\r\n        }\r\n        return res;\r\n    },\r\n    Unspiderfy: function () {\r\n        var _this = this;\r\n        for (var i = 0, l = this._currentMarkers.length; i < l; ++i) {\r\n            this._currentMarkers[i].setLatLng(this._currentCenter).setOpacity(0);\r\n        }\r\n        var markers = this._currentMarkers;\r\n        window.setTimeout(function () {\r\n            for (i = 0, l = markers.length; i < l; ++i) {\r\n                _this._map.removeLayer(markers[i]);\r\n            }\r\n        }, 300);\r\n        this._currentMarkers = [];\r\n        this._map.removeLayer(this._lines);\r\n        if (this._clusterMarker) {\r\n            this._clusterMarker.setOpacity(1);\r\n        }\r\n    },\r\n    onRemove: function (map) {\r\n        this.Unspiderfy();\r\n        map.off('overlappingmarkers', this.Spiderfy, this);\r\n        map.off('click', this.Unspiderfy, this);\r\n        map.off('zoomend', this.Unspiderfy, this);\r\n    }\r\n});\r\n\n/*** EXPORTS FROM exports-loader ***/\nexport {\n  PruneCluster,\n  PruneClusterForLeaflet\n};\n","\"use strict\";\n\nimport dataForJs from \"~/function/dataForJs\";\nimport ParamEnum from \"~/enum/ParamEnum\";\nimport Routing from \"~/module/Routing\";\nimport Map from \"~/module/leaflet/map\";\nimport \"~/module/leaflet/leaflet\";\n// noinspection ES6CheckImport\nimport {\n    PruneCluster,\n    PruneClusterForLeaflet,\n} from \"exports-loader?exports=PruneCluster,PruneClusterForLeaflet!prunecluster/dist/PruneCluster.js\";\nimport \"prunecluster/dist/LeafletStyleSheet.css\";\nimport markerIcon from \"~/module/leaflet/leaflet_marker_icon\";\n\nlet map = new Map();\nlet mapElement = document.querySelector(\".js__mapWithListings\");\nif (mapElement) {\n    let leafletMap = map.createLeafletMap(mapElement);\n    leafletMap.on(\"moveend\", function () {\n        let url = new URL(window.location);\n        let lat = leafletMap.getCenter().lat;\n        let lng = leafletMap.getCenter().lng;\n        let zoom = leafletMap.getZoom();\n\n        url.searchParams.set(ParamEnum.LATITUDE, lat);\n        url.searchParams.set(ParamEnum.LONGITUDE, lng);\n        url.searchParams.set(ParamEnum.ZOOM, zoom);\n        window.history.pushState(null, null, url.toString());\n\n        document.querySelectorAll(\".js__linkToMap\").forEach((linkElement) => {\n            let linkUrl = new URL(linkElement.getAttribute(\"href\"), window.location);\n            linkUrl.searchParams.set(ParamEnum.LATITUDE, lat);\n            linkUrl.searchParams.set(ParamEnum.LONGITUDE, lng);\n            linkUrl.searchParams.set(ParamEnum.ZOOM, zoom);\n            linkElement.setAttribute(\"href\", linkUrl.toString());\n        });\n\n        document.querySelector(\".js__filterLatitude\").value = lat;\n        document.querySelector(\".js__filterLongitude\").value = lng;\n        document.querySelector(\".js__filterZoom\").value = zoom;\n    });\n\n    var pruneCluster = new PruneClusterForLeaflet();\n    pruneCluster.PrepareLeafletMarker = function (leafletMarker, data) {\n        leafletMarker.setIcon(markerIcon);\n        /**\n         * @typedef {Object} listingOnMap\n         * @property {int} listingId\n         */\n        let listingOnMap = data.listingOnMap;\n        let url = Routing.generate(\"app_listing_show\", {\n            id: listingOnMap.listingId,\n            slug: listingOnMap.listingSlug,\n        });\n\n        let imageUrl = Routing.generate(\"app_public_dir\") + listingOnMap.mainImage;\n        let image = \"\";\n        if (listingOnMap.mainImage) {\n            image = `<img src=\"${imageUrl}\" class=\"map-popup-image float-left mr-2\" alt=\"\" />`;\n        }\n        let popupContent = `\n            <a href='${url}' class=\"map-popup-wrapper\">\n                ${image}\n                ${listingOnMap.listingTitle}\n            </a>\n        `;\n        if (leafletMarker.getPopup()) {\n            leafletMarker.setPopupContent(popupContent);\n        } else {\n            leafletMarker.bindPopup(popupContent, {\n                autoPan: false,\n            });\n        }\n    };\n\n    dataForJs[ParamEnum.LISTING_LIST].forEach((listingOnMap) => {\n        var marker = new PruneCluster.Marker(listingOnMap.latitude, listingOnMap.longitude);\n        /**\n         * @typedef {Object} listingOnMap\n         * @property {string} listingSlug\n         * @property {string} listingTitle\n         * @property {string} mainImage\n         */\n        marker.data.listingOnMap = listingOnMap;\n        pruneCluster.RegisterMarker(marker);\n    });\n\n    leafletMap.addLayer(pruneCluster);\n}\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var anObject = require('../internals/an-object');\n\nmodule.exports = function (iterator) {\n  var returnMethod = iterator['return'];\n  if (returnMethod !== undefined) {\n    return anObject(returnMethod.call(iterator)).value;\n  }\n};\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n"],"sourceRoot":""}