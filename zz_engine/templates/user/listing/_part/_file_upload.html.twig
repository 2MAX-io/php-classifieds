<link rel="stylesheet" href="{{ asset('asset/lib/fileuploader/font/font-fileuploader.css') }}">
<link rel="stylesheet" href="{{ asset('asset/lib/fileuploader/jquery.fileuploader.min.css') }}">
<script src="{{ asset('asset/lib/fileuploader/jquery.fileuploader.min.js') }}"></script>

<script>
    $('#listing_file').fileuploader({
        addMore: true,
        fileMaxSize: 1.95,
        extensions: ['jpg', 'jpeg', 'png', 'gif'],
        thumbnails: {
            onItemShow: function(item) {
                // add sorter button to the item html
                item.html.find('.fileuploader-action-remove').before('<a class="fileuploader-action fileuploader-action-sort" title="Sort"><i></i></a>');
            }
        },
        sorter: {
            selectorExclude: null,
            placeholder: null,
            scrollContainer: window,
            onSort: function(list, listEl, parentEl, newInputEl, inputEl) {}
        },
        onRemove: function(item, listEl, parentEl, newInputEl, inputEl) {
            if ('listingFileId' in item.data) {
                $.post('{{ path('app_listing_file_remove') }}', {
                    listingFileId: item.data.listingFileId
                });
            }

            return true;
        },
        files: {{ listingFilesForJavascript | default([]) | json_encode | raw }},
        captions: {
            button: function(options) { return Translator.trans('trans.Browse') + ' ' + (options.limit == 1 ? Translator.trans('trans.file') : Translator.trans('trans.files')); },
            feedback: function(options) { return Translator.trans('trans.Chose') + ' ' + (options.limit == 1 ? Translator.trans('trans.file') : Translator.trans('trans.files')) + ' ' + Translator.trans('trans.to upload'); },
            feedback2: function(options) { return options.length + ' ' + (options.length > 1 ? ' ' + Translator.trans('trans.files were chosen') : ' ' + Translator.trans('trans.file was chosen')); },
            confirm: Translator.trans('trans.Confirm'),
            cancel: Translator.trans('trans.Cancel'),
            name: Translator.trans('trans.Name'),
            type: Translator.trans('trans.Type'),
            size: Translator.trans('trans.Size'),
            dimensions: Translator.trans('trans.Dimensions'),
            duration: Translator.trans('trans.Duration'),
            crop: Translator.trans('trans.Crop'),
            rotate: Translator.trans('trans.Rotate'),
            sort: Translator.trans('trans.Sort'),
            download: Translator.trans('trans.Download'),
            remove: Translator.trans('trans.Remove'),
            drop: Translator.trans('trans.Drop the files here to Upload'),
            paste: '<div class="fileuploader-pending-loader"></div> '+ Translator.trans('trans.Pasting a file, click here to cancel') +'.',
            removeConfirmation: Translator.trans('trans.Are you sure you want to remove this file?'),
            errors: {
                filesLimit: Translator.trans('trans.Only ${limit} files are allowed to be uploaded'),
                filesType: Translator.trans('trans.Only ${extensions} files are allowed to be uploaded'),
                fileSize: Translator.trans('trans.${name} is too large! Please choose a file up to ${fileMaxSize}MB'),
                filesSizeAll: Translator.trans('trans.Files that you chose are too large! Please upload files up to ${maxSize} MB'),
                fileName: Translator.trans('trans.File with the name ${name} is already selected'),
                folderUpload: Translator.trans('trans.You are not allowed to upload folders'),
            }
        }
    });
</script>
