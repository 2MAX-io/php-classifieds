{"version":3,"file":"9422.6e42ac55.js","mappings":"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","sources":["webpack://symfony//var/www/html/asset/backendGenerated/bazingajstranslation/translations|sync|/^\\.\\/.*\\.json$/","webpack://symfony/./assets/enum/ParamEnum.js","webpack://symfony/./assets/function/dataForJs.js","webpack://symfony/./assets/module/Translator.js","webpack://symfony/./vendor/willdurand/js-translation-bundle/Resources/js/translator.js"],"sourcesContent":["var map = {\n\t\"./config.json\": 1040,\n\t\"./en.json\": 18524,\n\t\"./pl.json\": 70528\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33084;","\"use strict\";\n\nvar ParamEnum = {};\nParamEnum.DATA_FOR_JS = \"dataForJs\";\nParamEnum.CSRF_TOKEN = \"csrfToken\";\nParamEnum.CSRF_HEADER = \"x-csrf-token\";\nParamEnum.LANGUAGE_ISO = \"languageIso\";\nParamEnum.COUNTRY_ISO = \"countryIso\";\nParamEnum.BASE_URL = \"baseUrl\";\nParamEnum.SUCCESS = \"success\";\nParamEnum.ERROR = \"error\";\nParamEnum.USERNAME = \"username\";\nParamEnum.LISTING_ID = \"listingId\";\nParamEnum.CATEGORY_ID = \"categoryId\";\nParamEnum.LISTING_LIST = \"listingList\";\nParamEnum.LISTING_FILES = \"listingFiles\";\nParamEnum.CUSTOM_FIELD = \"customField\";\nParamEnum.PACKAGE_LIST = \"packageList\";\nParamEnum.SHOW_CONTACT_HTML = \"showContactHtml\";\nParamEnum.SHOW_LISTING_PREVIEW_FOR_OWNER = \"showListingPreviewForOwner\";\nParamEnum.PAYMENT_APP_TOKEN = \"paymentAppToken\";\nParamEnum.POLICE_LOG_TEXT = \"policeLogText\";\nParamEnum.MAP_LOCATION_COORDINATES = \"mapLocationCoordinates\";\nParamEnum.MAP_DEFAULT_LATITUDE = \"mapDefaultLatitude\";\nParamEnum.MAP_DEFAULT_LONGITUDE = \"mapDefaultLongitude\";\nParamEnum.MAP_DEFAULT_ZOOM = \"mapDefaultZoom\";\nParamEnum.LONGITUDE = \"longitude\";\nParamEnum.LATITUDE = \"latitude\";\nParamEnum.ZOOM = \"zoom\";\nParamEnum.THOUSAND_SEPARATOR = \"thousandSeparator\";\nParamEnum.NUMERAL_DECIMAL_MARK = \"numeralDecimalMark\";\nParamEnum.OBSERVED = \"observed\";\n\nexport { ParamEnum as default };\n","\"use strict\";\n\nlet dataForJs = null;\n\nlet getDataForJsNoCache = function () {\n    let dataForJsElement = document.getElementById(\"js__dataForJs\");\n    if (null === dataForJsElement) {\n        return {};\n    }\n\n    return JSON.parse(atob(dataForJsElement.value));\n};\n\nlet getDataForJs = function () {\n    if (dataForJs === null) {\n        dataForJs = getDataForJsNoCache();\n    }\n\n    return dataForJs;\n};\n\ndataForJs = getDataForJs();\n\nexport { dataForJs as default, getDataForJs, getDataForJsNoCache };\n","\"use strict\";\n\nimport ParamEnum from \"~/enum/ParamEnum\";\nimport TranslatorBundle from \"../../../zz_engine/vendor/willdurand/js-translation-bundle/Resources/js/translator.js\";\nimport dataForJs from \"~/function/dataForJs\";\n\nclass Translator {\n    static translationsLoaded = false;\n\n    static trans(translationKey, translationParams) {\n        /** @type {string} */\n        let lang = dataForJs[ParamEnum.LANGUAGE_ISO].toString().toLowerCase();\n        if (!Translator.translationsLoaded) {\n            // noinspection JSUnresolvedFunction\n            TranslatorBundle.fromJSON(\n                require(\"../../../asset/backendGenerated/bazingajstranslation/translations/\" + lang + \".json\")\n            );\n        }\n\n        // noinspection JSUnresolvedFunction\n        return TranslatorBundle.trans(translationKey, translationParams, null, lang);\n    }\n}\n\nexport default Translator;\n","/**\n * @author William DURAND <william.durand1@gmail.com>\n * @license MIT Licensed\n */\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('Translator', factory);\n    }\n    else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    }\n    else {\n        root.Translator = factory();\n    }\n}(this, function () {\n    \"use strict\";\n\n    var _messages     = {},\n        _fallbackLocale = 'en',\n        _domains      = [],\n        _sPluralRegex = new RegExp(/^\\w+\\: +(.+)$/),\n        _cPluralRegex = new RegExp(/^\\s*((\\{\\s*(\\-?\\d+[\\s*,\\s*\\-?\\d+]*)\\s*\\})|([\\[\\]])\\s*(-Inf|\\-?\\d+)\\s*,\\s*(\\+?Inf|\\-?\\d+)\\s*([\\[\\]]))\\s?(.+?)$/),\n        _iPluralRegex = new RegExp(/^\\s*(\\{\\s*(\\-?\\d+[\\s*,\\s*\\-?\\d+]*)\\s*\\})|([\\[\\]])\\s*(-Inf|\\-?\\d+)\\s*,\\s*(\\+?Inf|\\-?\\d+)\\s*([\\[\\]])/);\n\n    var Translator = {\n        /**\n         * The current locale.\n         *\n         * @type {String}\n         * @api public\n         */\n        locale: get_current_locale(),\n\n        /**\n         * Fallback locale.\n         *\n         * @type {String}\n         * @api public\n         */\n        fallback: _fallbackLocale,\n\n        /**\n         * Placeholder prefix.\n         *\n         * @type {String}\n         * @api public\n         */\n        placeHolderPrefix: '%',\n\n        /**\n         * Placeholder suffix.\n         *\n         * @type {String}\n         * @api public\n         */\n        placeHolderSuffix: '%',\n\n        /**\n         * Default domain.\n         *\n         * @type {String}\n         * @api public\n         */\n        defaultDomain: 'messages',\n\n        /**\n         * Plural separator.\n         *\n         * @type {String}\n         * @api public\n         */\n        pluralSeparator: '|',\n\n        /**\n         * Adds a translation entry.\n         *\n         * @param {String} id         The message id\n         * @param {String} message    The message to register for the given id\n         * @param {String} [domain]   The domain for the message or null to use the default\n         * @param {String} [locale]   The locale or null to use the default\n         * @return {Object}           Translator\n         * @api public\n         */\n        add: function(id, message, domain, locale) {\n            var _locale = locale || this.locale || this.fallback,\n                _domain = domain || this.defaultDomain;\n\n            if (!_messages[_locale]) {\n                _messages[_locale] = {};\n            }\n\n            if (!_messages[_locale][_domain]) {\n                _messages[_locale][_domain] = {};\n            }\n\n            _messages[_locale][_domain][id] = message;\n\n            if (false === exists(_domains, _domain)) {\n                _domains.push(_domain);\n            }\n\n            return this;\n        },\n\n\n        /**\n         * Translates the given message.\n         *\n         * @param {String} id               The message id\n         * @param {Object} [parameters]     An array of parameters for the message\n         * @param {String} [domain]         The domain for the message or null to guess it\n         * @param {String} [locale]         The locale or null to use the default\n         * @return {String}                 The translated string\n         * @api public\n         */\n        trans: function(id, parameters, domain, locale) {\n            var _message = get_message(\n                id,\n                domain,\n                locale,\n                this.locale,\n                this.fallback\n            );\n\n            return replace_placeholders(_message, parameters || {});\n        },\n\n        /**\n         * Translates the given choice message by choosing a translation according to a number.\n         *\n         * @param {String} id               The message id\n         * @param {Number} number           The number to use to find the indice of the message\n         * @param {Object} [parameters]     An array of parameters for the message\n         * @param {String} [domain]         The domain for the message or null to guess it\n         * @param {String} [locale]         The locale or null to use the default\n         * @return {String}                 The translated string\n         * @api public\n         */\n        transChoice: function(id, number, parameters, domain, locale) {\n            var _message = get_message(\n                id,\n                domain,\n                locale,\n                this.locale,\n                this.fallback\n            );\n\n            var _number  = parseInt(number, 10);\n            parameters = parameters || {};\n\n            if (parameters.count === undefined) {\n                parameters.count = number;\n            }\n\n            if (typeof _message !== 'undefined' && !isNaN(_number)) {\n                _message = pluralize(\n                    _message,\n                    _number,\n                    locale || this.locale || this.fallback\n                );\n            }\n\n            return replace_placeholders(_message, parameters);\n        },\n\n        /**\n         * Loads translations from JSON.\n         *\n         * @param {String} data     A JSON string or object literal\n         * @return {Object}         Translator\n         * @api public\n         */\n        fromJSON: function(data) {\n            if (typeof data === 'string') {\n                data = JSON.parse(data);\n            }\n\n            if (data.locale) {\n                this.locale = data.locale;\n            }\n\n            if (data.fallback) {\n                this.fallback = data.fallback;\n            }\n\n            if (data.defaultDomain) {\n                this.defaultDomain = data.defaultDomain;\n            }\n\n            if (data.translations) {\n                for (var locale in data.translations) {\n                    for (var domain in data.translations[locale]) {\n                        for (var id in data.translations[locale][domain]) {\n                            this.add(id, data.translations[locale][domain][id], domain, locale);\n                        }\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * @api public\n         */\n        reset: function() {\n            _messages   = {};\n            _domains    = [];\n            this.locale = get_current_locale();\n        }\n    };\n\n    /**\n     * Replace placeholders in given message.\n     *\n     * **WARNING:** used placeholders are removed.\n     *\n     * @param {String} message      The translated message\n     * @param {Object} placeholders The placeholders to replace\n     * @return {String}             A human readable message\n     * @api private\n     */\n    function replace_placeholders(message, placeholders) {\n        var _i,\n            _prefix = Translator.placeHolderPrefix,\n            _suffix = Translator.placeHolderSuffix;\n\n        for (_i in placeholders) {\n            var _r = new RegExp(_prefix + _i + _suffix, 'g');\n\n            if (_r.test(message)) {\n                var _v = String(placeholders[_i]).replace(new RegExp('\\\\$', 'g'), '$$$$');\n                message = message.replace(_r, _v);\n            }\n        }\n\n        return message;\n    }\n\n    /**\n     * Get the message based on its id, its domain, and its locale. If domain or\n     * locale are not specified, it will try to find the message using fallbacks.\n     *\n     * @param {String} id               The message id\n     * @param {String} domain           The domain for the message or null to guess it\n     * @param {String} locale           The locale or null to use the default\n     * @param {String} currentLocale    The current locale or null to use the default\n     * @param {String} localeFallback   The fallback (default) locale\n     * @return {String}                 The right message if found, `undefined` otherwise\n     * @api private\n     */\n    function get_message(id, domain, locale, currentLocale, localeFallback) {\n        var _locale = locale || currentLocale || localeFallback,\n            _domain = domain;\n\n        var nationalLocaleFallback = _locale.split('_')[0];\n\n        if (!(_locale in _messages)) {\n            if (!(nationalLocaleFallback in _messages)) {\n                if (!(localeFallback in _messages)) {\n                    return id;\n                }\n                _locale = localeFallback;\n            } else {\n                _locale = nationalLocaleFallback;\n            }\n        }\n\n        if (typeof _domain === 'undefined' || null === _domain) {\n            for (var i = 0; i < _domains.length; i++) {\n                if (has_message(_locale, _domains[i], id) ||\n                    has_message(nationalLocaleFallback, _domains[i], id) ||\n                    has_message(localeFallback, _domains[i], id)) {\n                    _domain = _domains[i];\n\n                    break;\n                }\n            }\n        }\n\n        if (has_message(_locale, _domain, id)) {\n            return _messages[_locale][_domain][id];\n        }\n\n        var _length, _parts, _last, _lastLength;\n\n        while (_locale.length > 2) {\n            _length     = _locale.length;\n            _parts      = _locale.split(/[\\s_]+/);\n            _last       = _parts[_parts.length - 1];\n            _lastLength = _last.length;\n\n            if (1 === _parts.length) {\n                break;\n            }\n\n            _locale = _locale.substring(0, _length - (_lastLength + 1));\n\n            if (has_message(_locale, _domain, id)) {\n                return _messages[_locale][_domain][id];\n            }\n        }\n\n        if (has_message(localeFallback, _domain, id)) {\n            return _messages[localeFallback][_domain][id];\n        }\n\n        return id;\n    }\n\n    /**\n     * Just look for a specific locale / domain / id if the message is available,\n     * helpful for message availability validation\n     *\n     * @param {String} locale           The locale\n     * @param {String} domain           The domain for the message\n     * @param {String} id               The message id\n     * @return {Boolean}                Return `true` if message is available,\n     *                      `               false` otherwise\n     * @api private\n     */\n    function has_message(locale, domain, id) {\n        if (!(locale in _messages)) {\n            return false;\n        }\n\n        if (!(domain in _messages[locale])) {\n            return false;\n        }\n\n        if (!(id in _messages[locale][domain])) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * The logic comes from the Symfony2 PHP Framework.\n     *\n     * Given a message with different plural translations separated by a\n     * pipe (|), this method returns the correct portion of the message based\n     * on the given number, the current locale and the pluralization rules\n     * in the message itself.\n     *\n     * The message supports two different types of pluralization rules:\n     *\n     * interval: {0} There is no apples|{1} There is one apple|]1,Inf] There is %count% apples\n     * indexed:  There is one apple|There is %count% apples\n     *\n     * The indexed solution can also contain labels (e.g. one: There is one apple).\n     * This is purely for making the translations more clear - it does not\n     * affect the functionality.\n     *\n     * The two methods can also be mixed:\n     *     {0} There is no apples|one: There is one apple|more: There is %count% apples\n     *\n     * @param {String} message  The message id\n     * @param {Number} number   The number to use to find the indice of the message\n     * @param {String} locale   The locale\n     * @return {String}         The message part to use for translation\n     * @api private\n     */\n    function pluralize(message, number, locale) {\n        var _p,\n            _e,\n            _explicitRules = [],\n            _standardRules = [],\n            _parts         = message.split(Translator.pluralSeparator),\n            _matches       = [];\n\n        for (_p = 0; _p < _parts.length; _p++) {\n            var _part = _parts[_p];\n\n            if (_cPluralRegex.test(_part)) {\n                _matches = _part.match(_cPluralRegex);\n                _explicitRules[_matches[0]] = _matches[_matches.length - 1];\n            } else if (_sPluralRegex.test(_part)) {\n                _matches = _part.match(_sPluralRegex);\n                _standardRules.push(_matches[1]);\n            } else {\n                _standardRules.push(_part);\n            }\n        }\n\n        for (_e in _explicitRules) {\n            if (_iPluralRegex.test(_e)) {\n                _matches = _e.match(_iPluralRegex);\n\n                if (_matches[1]) {\n                    var _ns = _matches[2].split(','),\n                        _n;\n\n                    for (_n in _ns) {\n                        if (number == _ns[_n]) {\n                            return _explicitRules[_e];\n                        }\n                    }\n                } else {\n                    var _leftNumber  = convert_number(_matches[4]);\n                    var _rightNumber = convert_number(_matches[5]);\n\n                    if (('[' === _matches[3] ? number >= _leftNumber : number > _leftNumber) &&\n                        (']' === _matches[6] ? number <= _rightNumber : number < _rightNumber)) {\n                        return _explicitRules[_e];\n                    }\n                }\n            }\n        }\n\n        return _standardRules[plural_position(number, locale)] || _standardRules[0] || undefined;\n    }\n\n    /**\n     * The logic comes from the Symfony2 PHP Framework.\n     *\n     * Convert number as String, \"Inf\" and \"-Inf\"\n     * values to number values.\n     *\n     * @param {String} number   A literal number\n     * @return {Number}         The int value of the number\n     * @api private\n     */\n    function convert_number(number) {\n        if ('-Inf' === number) {\n            return Number.NEGATIVE_INFINITY;\n        } else if ('+Inf' === number || 'Inf' === number) {\n            return Number.POSITIVE_INFINITY;\n        }\n\n        return parseInt(number, 10);\n    }\n\n    /**\n     * The logic comes from the Symfony2 PHP Framework.\n     *\n     * Returns the plural position to use for the given locale and number.\n     *\n     * @param {Number} number  The number to use to find the indice of the message\n     * @param {String} locale  The locale\n     * @return {Number}        The plural position\n     * @api private\n     */\n    function plural_position(number, locale) {\n        var _locale = locale;\n\n        if ('pt_BR' === _locale) {\n            _locale = 'xbr';\n        }\n\n        if (_locale.length > 3) {\n            _locale = _locale.split('_')[0];\n        }\n\n        switch (_locale) {\n            case 'bo':\n            case 'dz':\n            case 'id':\n            case 'ja':\n            case 'jv':\n            case 'ka':\n            case 'km':\n            case 'kn':\n            case 'ko':\n            case 'ms':\n            case 'th':\n            case 'tr':\n            case 'vi':\n            case 'zh':\n                return 0;\n            case 'af':\n            case 'az':\n            case 'bn':\n            case 'bg':\n            case 'ca':\n            case 'da':\n            case 'de':\n            case 'el':\n            case 'en':\n            case 'eo':\n            case 'es':\n            case 'et':\n            case 'eu':\n            case 'fa':\n            case 'fi':\n            case 'fo':\n            case 'fur':\n            case 'fy':\n            case 'gl':\n            case 'gu':\n            case 'ha':\n            case 'he':\n            case 'hu':\n            case 'is':\n            case 'it':\n            case 'ku':\n            case 'lb':\n            case 'ml':\n            case 'mn':\n            case 'mr':\n            case 'nah':\n            case 'nb':\n            case 'ne':\n            case 'nl':\n            case 'nn':\n            case 'no':\n            case 'om':\n            case 'or':\n            case 'pa':\n            case 'pap':\n            case 'ps':\n            case 'pt':\n            case 'so':\n            case 'sq':\n            case 'sv':\n            case 'sw':\n            case 'ta':\n            case 'te':\n            case 'tk':\n            case 'ur':\n            case 'zu':\n                return (number == 1) ? 0 : 1;\n\n            case 'am':\n            case 'bh':\n            case 'fil':\n            case 'fr':\n            case 'gun':\n            case 'hi':\n            case 'ln':\n            case 'mg':\n            case 'nso':\n            case 'xbr':\n            case 'ti':\n            case 'wa':\n                return ((number === 0) || (number == 1)) ? 0 : 1;\n\n            case 'be':\n            case 'bs':\n            case 'hr':\n            case 'ru':\n            case 'sr':\n            case 'uk':\n                return ((number % 10 == 1) && (number % 100 != 11)) ? 0 : (((number % 10 >= 2) && (number % 10 <= 4) && ((number % 100 < 10) || (number % 100 >= 20))) ? 1 : 2);\n\n            case 'cs':\n            case 'sk':\n                return (number == 1) ? 0 : (((number >= 2) && (number <= 4)) ? 1 : 2);\n\n            case 'ga':\n                return (number == 1) ? 0 : ((number == 2) ? 1 : 2);\n\n            case 'lt':\n                return ((number % 10 == 1) && (number % 100 != 11)) ? 0 : (((number % 10 >= 2) && ((number % 100 < 10) || (number % 100 >= 20))) ? 1 : 2);\n\n            case 'sl':\n                return (number % 100 == 1) ? 0 : ((number % 100 == 2) ? 1 : (((number % 100 == 3) || (number % 100 == 4)) ? 2 : 3));\n\n            case 'mk':\n                return (number % 10 == 1) ? 0 : 1;\n\n            case 'mt':\n                return (number == 1) ? 0 : (((number === 0) || ((number % 100 > 1) && (number % 100 < 11))) ? 1 : (((number % 100 > 10) && (number % 100 < 20)) ? 2 : 3));\n\n            case 'lv':\n                return (number === 0) ? 0 : (((number % 10 == 1) && (number % 100 != 11)) ? 1 : 2);\n\n            case 'pl':\n                return (number == 1) ? 0 : (((number % 10 >= 2) && (number % 10 <= 4) && ((number % 100 < 12) || (number % 100 > 14))) ? 1 : 2);\n\n            case 'cy':\n                return (number == 1) ? 0 : ((number == 2) ? 1 : (((number == 8) || (number == 11)) ? 2 : 3));\n\n            case 'ro':\n                return (number == 1) ? 0 : (((number === 0) || ((number % 100 > 0) && (number % 100 < 20))) ? 1 : 2);\n\n            case 'ar':\n                return (number === 0) ? 0 : ((number == 1) ? 1 : ((number == 2) ? 2 : (((number >= 3) && (number <= 10)) ? 3 : (((number >= 11) && (number <= 99)) ? 4 : 5))));\n\n            default:\n                return 0;\n        }\n    }\n\n    /**\n     * @type {Array}        An array\n     * @type {String}       An element to compare\n     * @return {Boolean}    Return `true` if `array` contains `element`,\n     *                      `false` otherwise\n     * @api private\n     */\n    function exists(array, element) {\n        for (var i = 0; i < array.length; i++) {\n            if (element === array[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Get the current application's locale based on the `lang` attribute\n     * on the `html` tag.\n     *\n     * @return {String}     The current application's locale\n     * @api private\n     */\n    function get_current_locale() {\n        if (typeof document !== 'undefined') {\n            return document.documentElement.lang.replace('-', '_');\n        }\n        else {\n            return _fallbackLocale;\n        }\n    }\n\n    return Translator;\n}));\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ParamEnum","dataForJsElement","dataForJs","document","getElementById","JSON","parse","atob","value","Translator","translationKey","translationParams","lang","toString","toLowerCase","translationsLoaded","TranslatorBundle","require","define","_messages","_fallbackLocale","_domains","_sPluralRegex","RegExp","_cPluralRegex","_iPluralRegex","locale","get_current_locale","fallback","placeHolderPrefix","placeHolderSuffix","defaultDomain","pluralSeparator","add","message","domain","_locale","this","_domain","exists","push","trans","parameters","replace_placeholders","get_message","transChoice","number","_message","_number","parseInt","undefined","count","isNaN","pluralize","fromJSON","data","translations","reset","placeholders","_i","_prefix","_suffix","_r","test","_v","String","replace","currentLocale","localeFallback","_length","_parts","_lastLength","nationalLocaleFallback","split","i","length","has_message","substring","_p","_e","_explicitRules","_standardRules","_matches","_part","match","_n","_ns","_leftNumber","convert_number","_rightNumber","plural_position","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","array","element","documentElement"],"sourceRoot":""}