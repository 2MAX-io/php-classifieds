{"version":3,"file":"user_message.555b34f6.js","mappings":"0IAIIA,EAAmBC,GAAAA,CAAE,wBACzBD,EAAiBE,GAAG,YAAY,SAAUC,GACJ,KAAnBA,EAAK,QACHA,EAAMC,UAA8C,KAAlCJ,EAAiBK,MAAMC,SACtDL,GAAAA,CAAEE,EAAMI,OAAOC,MAAMC,QAAQ,UAC7BN,EAAMO,qBAIdT,GAAAA,EAAE,WACEA,GAAAA,CAAE,oBAAoBU,UAAUV,GAAAA,CAAE,+BAA+BW,UAE7DZ,EAAiBa,QACjBZ,GAAAA,CAAE,wBAAwBQ,QAAQ,a,sBCjB1C,IAAIK,EAAuB,gBACvBC,EAAQ,EAAQ,OAChBC,EAAc,EAAQ,OAM1BC,EAAOC,QAAU,SAAUC,GACzB,OAAOJ,GAAM,WACX,QAASC,EAAYG,MANf,cAOGA,MACHL,GAAwBE,EAAYG,GAAaC,OAASD,O,sBCZpE,IAAIE,EAAc,EAAQ,MACtBC,EAAyB,EAAQ,OACjCC,EAAW,EAAQ,OACnBP,EAAc,EAAQ,OAEtBQ,EAAUH,EAAY,GAAGG,SACzBC,EAAa,IAAMT,EAAc,IACjCU,EAAQC,OAAO,IAAMF,EAAaA,EAAa,KAC/CG,EAAQD,OAAOF,EAAaA,EAAa,MAGzCI,EAAe,SAAUC,GAC3B,OAAO,SAAUC,GACf,IAAIC,EAAST,EAASD,EAAuBS,IAG7C,OAFW,EAAPD,IAAUE,EAASR,EAAQQ,EAAQN,EAAO,KACnC,EAAPI,IAAUE,EAASR,EAAQQ,EAAQJ,EAAO,KACvCI,IAIXf,EAAOC,QAAU,CAGfe,MAAOJ,EAAa,GAGpBK,IAAKL,EAAa,GAGlBvB,KAAMuB,EAAa,K,sBC7BrB,IAAIM,EAAS,EAAQ,OACjBC,EAAU,EAAQ,OAElBC,EAASF,EAAOE,OAEpBpB,EAAOC,QAAU,SAAUoB,GACzB,GAA0B,WAAtBF,EAAQE,GAAwB,MAAMC,UAAU,6CACpD,OAAOF,EAAOC,K,kBCNhBrB,EAAOC,QAAU,iD,mCCAjB,IAAIjB,EAAI,EAAQ,OACZuC,EAAQ,cAKZvC,EAAE,CAAEM,OAAQ,SAAUkC,OAAO,EAAMC,OAJN,EAAQ,MAIMC,CAAuB,SAAW,CAC3ErC,KAAM,WACJ,OAAOkC,EAAMI,W","sources":["webpack://symfony/./assets/public/user_message.js","webpack://symfony/./node_modules/core-js/internals/string-trim-forced.js","webpack://symfony/./node_modules/core-js/internals/string-trim.js","webpack://symfony/./node_modules/core-js/internals/to-string.js","webpack://symfony/./node_modules/core-js/internals/whitespaces.js","webpack://symfony/./node_modules/core-js/modules/es.string.trim.js"],"sourcesContent":["\"use strict\";\n\nimport $ from \"jquery\";\n\nlet $messageTextarea = $(\".js__messageTextarea\");\n$messageTextarea.on(\"keypress\", function (event) {\n    let enterKey = event[\"which\"] === 13;\n    if (enterKey && !event.shiftKey && $messageTextarea.val().trim() !== \"\") {\n        $(event.target.form).trigger(\"submit\");\n        event.preventDefault();\n    }\n});\n\n$(function () {\n    $(\".js__messageList\").scrollTop($(\".js__messageListMessagesBox\").height());\n\n    if ($messageTextarea.length) {\n        $(\".js__messageTextarea\").trigger(\"focus\");\n    }\n});\n","var PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]()\n      || non[METHOD_NAME]() !== non\n      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);\n  });\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var global = require('../internals/global');\nvar classof = require('../internals/classof');\n\nvar String = global.String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return String(argument);\n};\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n"],"names":["$messageTextarea","$","on","event","shiftKey","val","trim","target","form","trigger","preventDefault","scrollTop","height","length","PROPER_FUNCTION_NAME","fails","whitespaces","module","exports","METHOD_NAME","name","uncurryThis","requireObjectCoercible","toString","replace","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","start","end","global","classof","String","argument","TypeError","$trim","proto","forced","forcedStringTrimMethod","this"],"sourceRoot":""}